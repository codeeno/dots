######################################
# Basics
######################################

# shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# Tmux should be pretty, we need 256 color for that
set-option -g default-terminal "screen-256color"
set-option -sa terminal-features ',xterm:RGB'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# command delay? We don't want that, make it short
set -sg escape-time 0

# Allow us to reload our Tmux configuration while using Tmux
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# enable scrolling with mouse
set -g mouse on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Where the status bar is to be positioned
set-option -g status-position bottom

# Use vi keys in copy mode
setw -g mode-keys vi

######################################
# Some stuff from tmux-sensible
# https://github.com/tmux-plugins/tmux-sensible
######################################

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# set only on OS X where it's required
#set -g default-command "reattach-to-user-namespace -l $SHELL"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

######################################
# Keybinds
######################################

# Tmux uses a 'control key', let's set it to 'Ctrl-a'
# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
 set -g prefix C-b
# unbind C-b

# splitting panes
bind -n M-d split-window -h -c "#{pane_current_path}"
bind -n M-S-d split-window -v -c "#{pane_current_path}"

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Open window with currrent path
bind -n M-t new-window -c "#{pane_current_path}"
bind -n M-w kill-pane

# Use Shift-Alt-vim keys without prefix to switch windows
bind -n M-S-h previous-window
bind -n M-S-l next-window

# Toggle fullscreen/zoom of current pane
bind -n M-z resize-pane -Z

# Select windows directly
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Easier resize
bind-key -n M-Up    resize-pane -U 5
bind-key -n M-Down  resize-pane -D 5
bind-key -n M-Left  resize-pane -L 5
bind-key -n M-Right resize-pane -R 5

# Session management
bind-key -n C-p choose-tree -s

# Enter copy mode easier and make selection more like vim
bind-key -n C-f copy-mode
unbind-key -T copy-mode-vi v # Default rectangle selection key. Unbind to avoid conflict
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Bind key with prefix for btop
# bind-key b display-popup "btop"

######################################
# Nvim-tmux-navigation
######################################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

######################################
# Toggle-able panes
######################################

bind-key -n 'C-e' if-shell '[ "$(tmux list-panes | wc -l | bc)" = 1 ]' {
  split-window -hf -l 90 -c '#{pane_current_path}'
} {
  if-shell '[ -n "$(tmux list-panes -F ''#F'' | grep Z)" ]' {
    select-pane -t:.-
  } {
    resize-pane -Z -t1
  }
}

######################################
# Plugins
######################################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'

# I recommend using `o` if not already in use, for least key strokes when launching
set -g @sessionx-bind 'o'

# Catppuccin
# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavour 'macchiato' # or frappe, macchiato, mocha
#
# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator " "
# set -g @catppuccin_window_middle_separator " █"
# set -g @catppuccin_window_number_position "right"
#
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W"
#
# set -g @catppuccin_status_modules_right "application session date_time"
# set -g @catppuccin_status_left_separator  ""
# set -g @catppuccin_status_right_separator " "
# set -g @catppuccin_status_right_separator_inverse "yes"
# set -g @catppuccin_status_fill "all"
# set -g @catppuccin_status_connect_separator "no"
#
# set -g @catppuccin_pane_border_style "fg=blue" # Use a value compatible with the standard tmux 'pane-border-style'
# set -g @catppuccin_pane_active_border_style "fg=red" # Use a value compatible with the standard tmux 'pane-border-active-style'

# Dracula
set -g @plugin 'dracula/tmux'
set -g @dracula-show-fahrenheit false
set -g @dracula-military-time true

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
